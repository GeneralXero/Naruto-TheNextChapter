Stuff on the Sheet Master

--Basic Commands--

&CMD`ATTACKS Sheet Master=$-sheet/attacks: [setq(0,[udefault(%#/sheetnum, #17)])][nspemit(%# #4, [menu(helpfiles, Attacks)]%r[u(fn`getattacks, %q0)]%r[menu(helpfiles, End Attacks)])]

&CMD`DEFENSES Sheet Master=$-sheet/defenses: [setq(0,[udefault(%#/sheetnum, #17)])][nspemit(%#, [menu(helpfiles, Defenses)]%r[u(fn`getdefenses, %q0)]%r[menu(helpfiles, End Defenses)])]

&CMD`SHEETHELP Sheet Master=$-sheet/help: [nspemit(%#, [u(desc)])]

&CMD`SHEETHELP2 Sheet Master=$-sheet/?: [nspemit(%#, [u(desc)])]

&CMD`SKILLS Sheet Master=$-sheet/skills: [setq(0,[udefault(%#/sheetnum, #17)])][nspemit(%#, [menu(helpfiles, Skills)]%r[u(fn`getskills, %q0)]%r[menu(helpfiles, End Skills)])]

&CMD`STATS Sheet Master=$-sheet/stats: [setq(0,[udefault(%#/sheetnum, #17)])][nspemit(%#, [menu(helpfiles, Stats Listing)]%r[u(fn`gethealth, %q0)]%r[u(fn`getstats, %q0)]%r[menu(helpfiles, End Stats)])]

&CMD`TRANSFORMATIONS Sheet Master=$-sheet/transformations: [setq(0,[udefault(%#/sheetnum, #17)])][nspemit(%#, [menu(helpfiles, Transformations)]%r[u(fn`gettransformations, %q0)]%r[menu(helpfiles, End Transformations)])]

&cmd`view Sheet Master = $-sheet/view *: [if([orflags(%#, WrJ)], {[setq(0,[udefault([pmatch(*%0)]/sheetnum, #17)], 1, [pmatch(*%0)])][switch(1, [strmatch(#-1, %q1)], [nspemit(%#, [header(game)] Non-existent player name: %0)], [strmatch(#-2, %q1)], [nspemit(%#, [header(game)] Ambiguous player name: %0)], [nspemit(%#, [menu(helpfiles, [name(%q1)]'s Character Sheet)]%r[menu(greensplit, Stats)]%r[u(fn`gethealth, %q0)]%r[u(fn`getstats, %q0)]%r[menu(greensplit, Skills)]%r[u(fn`getskills, %q0)][menu(helpfiles, End Sheet)])])]}, [nspemit(%#, You are not permitted to do that!)])]

&cmd`sheet Sheet Master = $-sheet: [setq(0,[udefault(%#/sheetnum, #17)])][nspemit(%#, [menu(helpfiles, Character Sheet)]%r[menu(greensplit, Stats)]%r[u(fn`gethealth, %q0)]%r[u(fn`getstats, %q0)]%r[menu(greensplit, Skills)]%r[u(fn`getskills, %q0)][menu(helpfiles, End Sheet)])]

&cmd`share Sheet Master = $-sheet/share *: [setq(0,[udefault(%#/sheetnum, #17)], 1, [pmatch(*%0)])][switch(1, [strmatch(#-1, %q1)], [nspemit(%#, [header(game)] Non-existent player name: %0)], [strmatch(#-2, %q1)], [nspemit(%#, [header(game)] Ambiguous player name: %0)], [nspemit(%q1, [menu(helpfiles, %n's Character Sheet)]%r[menu(greensplit, Stats)]%r[u(fn`gethealth, %q0)]%r[u(fn`getstats, %q0)]%r[menu(greensplit, Skills)]%r[u(fn`getskills, %q0)][menu(helpfiles, End Sheet)])][nspemit(%#, [header(game)] You shared your sheet with [name(%q1)])])]

--Basic Help File--

&DESCRIBE Sheet Master=[menu(helpfiles, +Sheet Help)]%r[prettyprint(-sheet: See your sheet%r-sheet/share <name>: share your sheet%r-sheet/stats: see only your stats%r-sheet/skills: see only your skills%r-sheet/<attacks/defenses/transformations>: See only your attacks/defenses/transformations)]%r[menu(helpfiles, End Help)]

--Functions--
&FN`GETATTACKS Sheet Master=[u(fn`tableskills, %0, attack)]

&FN`GETDEFENSES Sheet Master=[u(fn`tableskills, %0, defense)]

&FN`GETHEALTH Sheet Master=[ljust(HP: [u(%0/stats`health`temp)]/[u(%0/stats`health`real)], 22)][ljust(Chakra: [u(%0/stats`chakra`real)], 22)][ljust(Stamina: [u(%0/stats`stamina`real)], 22)]

&FN`GETSKILLS Sheet Master=[menu(sectionsplit, Attacks)]%r[u(fn`getattacks, %0)]%r[menu(sectionsplit, Defenses)]%r[u(fn`getdefenses, %0)]%r[menu(sectionsplit, Transformations)]%r[u(fn`gettransformations, %0)]

&FN`GETSTATS Sheet Master=[table(Mind: [u(%0/stats`mind`real)]([u(%0/stats`mind`temp)]) Body: [u(%0/stats`body`real)]([u(%0/stats`body`temp)]) Spirit: [u(%0/stats`spirit`real)]([u(%0/stats`spirit`temp)]) Nin: [u(%0/stats`nin`real)]([u(%0/stats`nin`temp)]) Tai: [u(%0/stats`tai`real)]([u(%0/stats`tai`temp)]) Gen: [u(%0/stats`gen`real)]([u(%0/stats`gen`temp)]), 7, 50)]

&FN`GETTRANSFORMATIONS Sheet Master=[u(fn`tableskills, %0, transformation)]

&FN`TABLESKILLS Sheet Master=[table([sort([iter([u(%0/skills`%1)],[get(%i0/rank)]: [name(%i0)] ([get(%0/skills`%1`%i0)]),,\,)], i,\,,\,)], 38, 78,\,)]



--Skill/Stat Modifiers--
&UTILITY`skillset Sheet Master = [if([orflags(%#, WrJ)], [switch(1, [not([member([v(validskilltype)], %1)])], [nspemit(%#, Invalid Skill Type!)], [not(isInt(%3))], [nspemit(%#, Final argument is not a number!)], [eq(0, [words([lsearch(all, thing, %2)])])], [nspemit(%#, No such skill!)], [setq(0, [pmatch(%0)], 1, [get([pmatch(%0)]/sheetnum)], 2, [lsearch(all, thing, %2)])][if([gt([words(%q2)], 1)], [nspemit(%#, Vague Reference. Please look at [iter(%q2, %i0: [name(%i0)], ,\,%b)])], [switch(1, [lte(%3, 0)], [attrib_set(%q1/skills`%1`%q2, 0)], [gte(%3, 4)], [attrib_set(%q1/skills`%1`%q2, 4)], [attrib_set(%q1/skills`%1`%q2, %3)])][nspemit(%#, [name(%q0)] now has Level [get(%q1/skills`%1`%q2)] Mastery in %q2: [name(%q2)])])])], [nspemit(%#, You don't have permission to do that!)])]

&UTILITY`skillmod Sheet Master = [if([orflags(%#, WrJ)], [switch(1, [not([member([v(validskilltype)], %1)])], [nspemit(%#, Invalid Skill Type!)], [not(isInt(%3))], [nspemit(%#, Final argument is not a number!)], [eq(0, [words([lsearch(all, thing, %2)])])], [nspemit(%#, No such skill!)], [setq(0, [pmatch(%0)], 1, [get([pmatch(%0)]/sheetnum)], 2, [lsearch(all, thing, %2)])][if([gt([words(%q2)], 1)], [nspemit(%#, Vague Reference. Please look at [iter(%q2, %i0: [name(%i0)], ,\,%b)])], [setq(3, [add([get(%q1/skills`%1`%q2)], %3)])][switch(1, [lte(%q3, 0)], [attrib_set(%q1/skills`%1`%q2, 0)], [gte(%q3, 4)], [attrib_set(%q1/skills`%1`%q2, 4)], [attrib_set(%q1/skills`%1`%q2, %q3)])][nspemit(%#, [name(%q0)] now has Level [get(%q1/skills`%1`%q2)] Mastery in %q2: [name(%q2)])])])], [nspemit(%#, You don't have permission to do that!)])]

&UTILITY`statset Sheet Master = [if([orflags(%#, WrJ)], [switch(1, [not([member([v(validstats)], %1)])], [nspemit(%#, Invalid Stat Type!)], [not(isInt(%3))], [nspemit(%#, Final argument is not a number!)], [not([member(temp real, %2)])], [nspemit(%#, 3rd Argument must be Real or Temp)], [setq(0, [pmatch(%0)], 1, [get([pmatch(%0)]/sheetnum)])][if([strmatch(health, %1)], [setq(max, 9999)], [setq(max, 10)])][if([and([strmatch(temp, %2)], [not([member(health chakra stamina, %1)])])], [setq(min, -10)], [setq(min, 0)])][switch(1, [lte(%3, %q<min>)], [attrib_set(%q1/stats`%1`%2, %q<min>)], [gte(%3, %q<max>)], [attrib_set(%q1/stats`%1`%2, %q<max>)], [attrib_set(%q1/stats`%1`%2, %3)])][nspemit(%#, [name(%q0)] now has [get(%q1/stats`%1`%2)] %2 %1.)])], [nspemit(%#, You don't have permission to do that!)])]

&UTILITY`STATMOD Sheet Master = [if([orflags(%#, WrJ)], [switch(1, [not([member([v(validstats)], %1)])], [nspemit(%#, Invalid Stat Type!)], [not(isInt(%3))], [nspemit(%#, Final argument is not a number!)], [not([member(temp real, %2)])], [nspemit(%#, 3rd Argument must be Real or Temp)], [setq(0, [pmatch(%0)], 1, [get([pmatch(%0)]/sheetnum)])][if([strmatch(health, %1)], [setq(max, 9999)], [setq(max, 10)])][if([and([strmatch(temp, %2)], [not([member(health chakra stamina, %1)])])], [setq(min, -10)], [setq(min, 0)])][setq(2, [add([get(%q1/stats`%1`%2)], %3)])][switch(1, [lte(%q2, %q<min>)], [attrib_set(%q1/stats`%1`%2, %q<min>)], [gte(%q2, %q<max>)], [attrib_set(%q1/stats`%1`%2, %q<max>)], [attrib_set(%q1/stats`%1`%2, %q2)])][nspemit(%#, [name(%q0)] now has [get(%q1/stats`%1`%2)] %2 %1.)])], [nspemit(%#, You don't have permission to do that!)])]
